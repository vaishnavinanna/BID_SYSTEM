const puppeteer = require('puppeteer');
const service = require('../Service/bidService');

const generatePdf = async () => {
  try {
    const id = "user-4";
    const result = await service.getOwnerBidsWithBidders(id);
    console.log("The result is ", result);
    const bids = result.ownerCreatedBids;

    const owner = bids[0].creatorDetails;
    const bidName = bids[0].bidName;
    const bidDescription = bids[0].description;
    const bidCost = bids[0].cost;

    console.log("Fetched data for PDF generation: ", bids);
    const browser = await puppeteer.launch();
    const page = await browser.newPage();

    const bidderCards = bids.map(bid => {
      return `
        <div class="bidder-card">
          <div class="bidder-header">
            <h3>Bidder: ${bid.bidderDetails.name}</h3>
          </div>
          <div class="bidder-info">
            <p><strong>Email:</strong> ${bid.bidderDetails.email}</p>
            <p><strong>Bid Amount:</strong> $${bid.bidders.bidAmount}</p>
            <p><strong>Bid Duration:</strong> ${bid.bidders.bidDays} day(s)</p>
            <p><strong>Status:</strong> ${bid.status}</p>
          </div>
        </div>
      `;
    }).join('');

    const content = `
      <html>
        <head>
          <style>
            body {
              font-family: 'Arial', sans-serif;
              margin: 0;
              padding: 0;
              background-color: #f7f7f7;
              color: #333;
            }
            h1 {
              text-align: center;
              color: #4a4a4a;
              margin: 20px 0;
              font-size: 28px;
              font-weight: normal;
            }
            .owner-details {
              text-align: center;
              margin: 10px;
              padding: 10px;
              background-color: #ffffff;
              color: #333;
              border-radius: 10px;
              box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }
            .owner-details h2 {
              font-size: 24px;
              margin-bottom: 15px;
              font-weight: normal;
              color: #2a2a2a;
            }
            .owner-details p {
              margin: 8px 0;
              font-size: 16px;
              line-height: 1.6;
            }
            .bidder-details {
              text-align: center;
              margin: 30px 0;
              font-size: 22px;
              font-weight: bold;
              color: #5c5c5c;
            }
            .bidder-card {
              background-color: #ffffff;
              border-radius: 8px;
              margin: 20px auto;
              width: 80%;
              padding: 20px;
              box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
              transition: transform 0.3s ease, box-shadow 0.3s ease;
            }
            .bidder-card:hover {
              transform: translateY(-5px);
              box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
            }
            .bidder-header h3 {
              font-size: 20px;
              color:black;
              margin-bottom: 10px;
            }
            .bidder-info p {
              font-size: 14px;
              line-height: 1.6;
              margin: 6px 0;
            }
            .footer {
              text-align: center;
              margin-top: 50px;
              font-size: 12px;
              color: #888;
              font-style: italic;
            }
          </style>
        </head>
        <body>
          <h1>Bid Application Report</h1>
          <div class="owner-details">
            <p><strong>Owner Name:</strong> ${owner.name}</p>
            <p><strong>Email:</strong> ${owner.email}</p>
            <p><strong>Bid Name:</strong> ${bidName}</p>
            <p><strong>Bid Cost:</strong> $${bidCost}</p>
            <p><strong>Description:</strong> ${bidDescription}</p>
          </div>

          <div class="bidder-details">
            <h1>Bidder Information</h1>
          </div>
          ${bidderCards}

          <div class="footer">
            <p>Generated by BidApplication</p>
          </div>
        </body>
      </html>
    `;

    await page.setContent(content);

    const pdfPath = 'BidReport.pdf';
    const pdf = await page.pdf({
      path: pdfPath,
      format: 'A4',
      printBackground: true,
    });

    await browser.close();

    console.log("PDF generated successfully at:", pdfPath);

    return pdf;

  } catch (error) {
    console.error('Error generating PDF:', error);
    throw error;
  }
};

module.exports = { generatePdf };
